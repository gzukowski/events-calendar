version: "3"
services:
  db:
    image: postgres:latest
    env_file:
      - .env
    networks:
      - events_network
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - events_network
    depends_on:
      - db

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --app=event_calendar worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - events_network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --app=event_calendar beat -l info
    volumes:
      - ./:/app/
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - events_network
  
  redis:
    image: redis:latest
    networks:
      - events_network

networks:
  events_network:
